// Generated by Dagger (https://dagger.dev).
package jatx.foreignreader.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import jatx.foreignreader.adapters.ContentsAdapter;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AdaptersModule_ProvideContentsAdapterFactory implements Factory<ContentsAdapter> {
  private final AdaptersModule module;

  public AdaptersModule_ProvideContentsAdapterFactory(AdaptersModule module) {
    this.module = module;
  }

  @Override
  public ContentsAdapter get() {
    return provideContentsAdapter(module);
  }

  public static AdaptersModule_ProvideContentsAdapterFactory create(AdaptersModule module) {
    return new AdaptersModule_ProvideContentsAdapterFactory(module);
  }

  public static ContentsAdapter provideContentsAdapter(AdaptersModule instance) {
    return Preconditions.checkNotNull(instance.provideContentsAdapter(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
