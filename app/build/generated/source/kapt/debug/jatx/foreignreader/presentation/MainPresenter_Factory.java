// Generated by Dagger (https://dagger.dev).
package jatx.foreignreader.presentation;

import android.content.Context;
import dagger.internal.Factory;
import jatx.filereader.FileReader;
import jatx.foreignreader.prefs.Prefs;
import jatx.yandexdictionaryclient.YandexDictionaryClient;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainPresenter_Factory implements Factory<MainPresenter> {
  private final Provider<Context> contextProvider;

  private final Provider<YandexDictionaryClient> yandexDictionaryClientProvider;

  private final Provider<FileReader> fileReaderProvider;

  private final Provider<Prefs> prefsProvider;

  public MainPresenter_Factory(Provider<Context> contextProvider,
      Provider<YandexDictionaryClient> yandexDictionaryClientProvider,
      Provider<FileReader> fileReaderProvider, Provider<Prefs> prefsProvider) {
    this.contextProvider = contextProvider;
    this.yandexDictionaryClientProvider = yandexDictionaryClientProvider;
    this.fileReaderProvider = fileReaderProvider;
    this.prefsProvider = prefsProvider;
  }

  @Override
  public MainPresenter get() {
    return newInstance(contextProvider.get(), yandexDictionaryClientProvider.get(), fileReaderProvider.get(), prefsProvider.get());
  }

  public static MainPresenter_Factory create(Provider<Context> contextProvider,
      Provider<YandexDictionaryClient> yandexDictionaryClientProvider,
      Provider<FileReader> fileReaderProvider, Provider<Prefs> prefsProvider) {
    return new MainPresenter_Factory(contextProvider, yandexDictionaryClientProvider, fileReaderProvider, prefsProvider);
  }

  public static MainPresenter newInstance(Context context,
      YandexDictionaryClient yandexDictionaryClient, FileReader fileReader, Prefs prefs) {
    return new MainPresenter(context, yandexDictionaryClient, fileReader, prefs);
  }
}
