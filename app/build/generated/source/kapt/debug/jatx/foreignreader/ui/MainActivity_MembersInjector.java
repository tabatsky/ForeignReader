// Generated by Dagger (https://dagger.dev).
package jatx.foreignreader.ui;

import dagger.Lazy;
import dagger.MembersInjector;
import dagger.internal.DoubleCheck;
import jatx.foreignreader.adapters.ContentsAdapter;
import jatx.foreignreader.adapters.ParagraphsAdapter;
import jatx.foreignreader.presentation.MainPresenter;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<ParagraphsAdapter> rvParagraphsAdapterProvider;

  private final Provider<ContentsAdapter> rvContentsAdapterProvider;

  private final Provider<MainPresenter> presenterProvider;

  public MainActivity_MembersInjector(Provider<ParagraphsAdapter> rvParagraphsAdapterProvider,
      Provider<ContentsAdapter> rvContentsAdapterProvider,
      Provider<MainPresenter> presenterProvider) {
    this.rvParagraphsAdapterProvider = rvParagraphsAdapterProvider;
    this.rvContentsAdapterProvider = rvContentsAdapterProvider;
    this.presenterProvider = presenterProvider;
  }

  public static MembersInjector<MainActivity> create(
      Provider<ParagraphsAdapter> rvParagraphsAdapterProvider,
      Provider<ContentsAdapter> rvContentsAdapterProvider,
      Provider<MainPresenter> presenterProvider) {
    return new MainActivity_MembersInjector(rvParagraphsAdapterProvider, rvContentsAdapterProvider, presenterProvider);}

  @Override
  public void injectMembers(MainActivity instance) {
    injectRvParagraphsAdapter(instance, rvParagraphsAdapterProvider.get());
    injectRvContentsAdapter(instance, rvContentsAdapterProvider.get());
    injectPresenterProvider(instance, DoubleCheck.lazy(presenterProvider));
  }

  public static void injectRvParagraphsAdapter(MainActivity instance,
      ParagraphsAdapter rvParagraphsAdapter) {
    instance.rvParagraphsAdapter = rvParagraphsAdapter;
  }

  public static void injectRvContentsAdapter(MainActivity instance,
      ContentsAdapter rvContentsAdapter) {
    instance.rvContentsAdapter = rvContentsAdapter;
  }

  public static void injectPresenterProvider(MainActivity instance,
      Lazy<MainPresenter> presenterProvider) {
    instance.presenterProvider = presenterProvider;
  }
}
